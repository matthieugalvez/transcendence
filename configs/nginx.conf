events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        font/ttf
        font/woff
        font/woff2;

    # Upstream for the backend API
    upstream transcendence_api {
        server app:3000;
    }

    # HTTP server (redirect to HTTPS)
    #    server {
    #   listen 8080;
    #   server_name localhost;
    #   return 301 https://$server_name:8443$request_uri;
    #}

	server {
     listen 80;
     server_name pong42.click;
     return 301 https://pong42.click$request_uri;
 }

 server {
     listen 443 ssl;
     server_name pong42.click;
     # ...
# }

    # HTTPS server
     #    server {
     #  listen 443 ssl;
     #  server_name localhost;
		##pong42.click

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Serve static files from nginx
        root /usr/share/nginx/html;
        index index.html;

        # API routes - proxy to backend
        location /api/ {
            proxy_pass http://transcendence_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Health check - proxy to backend
        location /health {
            proxy_pass http://transcendence_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
		location ^~ /avatars/ {
			proxy_pass http://transcendence_api;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			# Cache settings
			expires 1d;
			add_header Cache-Control "public, max-age=86400";
			add_header Access-Control-Allow-Origin "*";
		}

        # WebSocket support - proxy to backend
        location /ws/ {
            proxy_pass http://transcendence_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # Font files served by nginx (your original location block)
        location ~* \.(ttf|ttc|otf|eot|woff|woff2)$ {
            add_header Access-Control-Allow-Origin "*";
            add_header Cache-Control "public, max-age=31536000, immutable";
            expires 1y;
            access_log off;
            try_files $uri =404;
        }

        # Static assets served by nginx
		location ~* ^(?!/avatars/)\.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
			expires 1y;
			add_header Cache-Control "public, immutable";
			access_log off;
			try_files $uri =404;
		}

        # SPA fallback - serve index.html for all other routes
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
    }
}
